#!/bin/bash
#
# Summary: Create a Python venv locally in the given directory
#
# Usage: pyenv local-venv [python_version] <venv_path>
#

set -e
[ -n "$PYENV_DEBUG" ] && set -x

# Abort with usage line when called with invalid arguments
if [ -z "$1" ]; then
  pyenv-help --usage local-venv >&2
  exit 1
fi

# Provide pyenv completions
if [ "$1" = "--complete" ]; then
  exec pyenv-versions --bare
fi

# Function to check if the directory exists
check_directory_exists() {
  local venv_path=$1

  if [ -d "$venv_path" ]; then
    read -p "Directory $venv_path already exists. Do you want to remove it before creating a new one? (y/N) " user_input
    if [[ ! $user_input =~ ^[Yy]$ ]]; then
      echo "aborting..."
      exit 1
    else
      echo "removing existing directory..."
      rm -rf "$venv_path"
    fi
  fi
}

# Function to create a virtual environment
create_virtualenv() {
  local py_version=$1
  local venv_path=$2

  # Construct the path to the Python interpreter
  local python_interpreter
  python_interpreter="$(pyenv root)/versions/$py_version/bin/python"

  check_directory_exists "$venv_path"

  # Try venv
  echo "Trying venv..."
  set +e
  "$python_interpreter" -m venv "$venv_path"
  local venv_status=$?
  set -e

  # venv unavailable
  if [ $venv_status -ne 0 ]; then
    echo "Trying virtualenv..."

    # Check if virtualenv is installed
    if ! "$python_interpreter" -m virtualenv --version; then
      # Ask user to install virtualenv
      read -p "Do you want to install virtualenv? (y/N) " user_input
      if [[ ! $user_input =~ ^[Yy]$ ]]; then
        echo "aborting..."
        exit 0
      else
        "$python_interpreter" -m pip install --user virtualenv
      fi
    fi

    # Finally try virtualenv
    "$python_interpreter" -m virtualenv "$venv_path"
  fi

  echo "Created virtual environment at $venv_path with ($py_version)."
}

# Main script
if [ $# -eq 1 ]; then
  python_version=$(pyenv version-name)
  venv_path=$1
else
  python_version=$(pyenv latest $1)
  venv_path=$2
fi

create_virtualenv "$python_version" "$venv_path"
